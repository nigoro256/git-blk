#!/bin/bash
#----
# Execute git command on multiple repositories.
#----

readonly repos_name="$1"
shift

readonly CONFIG_NAME='.git-blk'

# If repos name is empty then show usage and exit.
if [ -z "$repos_name" ]; then
  cat << EOC
Usage:
  git blk <repos-name> <git-command>

Description:
  Execute git command on multiple repositories.

  This command require config file './$CONFIG_NAME'.
  '$CONFIG_NAME' example:
  ----
  [repos]
  # repos-name = repo-dir repo-dir ...

  all   = repo1 repo2 repo3
  large = repo1 repo2
  ----

Example:
  git blk all fetch --all
    > git -C repo1 fetch --all
    > git -C repo2 fetch --all
    > git -C repo3 fetch --all

  git blk large lfs install --local
    > git -C repo1 lfs install --local
    > git -C repo2 lfs install --local

How to bulk commit:
  1. Edit commit message file. (e.g. \`vim COMMIT_MSG.txt\`)
  2. Execute \`git blk <repos-name> commit -F ../COMMIT_MSG.txt\`
EOC
  exit 1
fi

# Read repository list. if list is empty then exit as error.
repo_list="$(git config -f "$CONFIG_NAME" --get "repos.$repos_name")"
if [ -z "$repo_list" ]; then
  echo "No such repos name: '$repos_name'"
  echo
  cat "$CONFIG_NAME"
  exit 1
fi
readonly repo_list

# Execute git command.
read -r -a repos <<< "$repo_list"
for repo in "${repos[@]}"; do
  echo
  tput rev
  echo "> git -C $repo $*"
  tput sgr 0

  git -C "$repo" "$@"
done
echo
